import 'package:auto_size_text/auto_size_text.dart';
import 'package:beamer/beamer.dart';
import 'package:flutter/gestures.dart';
import 'package:flutter/material.dart';
import 'package:font_awesome_flutter/font_awesome_flutter.dart';
import 'package:google_fonts/google_fonts.dart';
import 'package:new_mini_casino/business/raffle_manager.dart';
import 'package:new_mini_casino/widgets/loading.dart';
import 'package:provider/provider.dart';
import 'package:url_launcher/url_launcher.dart';

class RaffleInfo extends StatelessWidget {
  const RaffleInfo({super.key});

  @override
  Widget build(BuildContext context) {
    return Consumer<RaffleManager>(
      builder: (context, value, child) {
        return value.isLoading
            ? loading(context: context)
            : Scaffold(
                appBar: AppBar(
                  toolbarHeight: 76.0,
                  elevation: 0,
                  backgroundColor: Colors.transparent,
                  leading: Padding(
                    padding: const EdgeInsets.only(left: 15.0),
                    child: IconButton(
                        splashRadius: 25.0,
                        padding: EdgeInsets.zero,
                        onPressed: () {
                          Beamer.of(context).beamBack();
                        },
                        icon: const FaIcon(
                          FontAwesomeIcons.arrowLeft,
                          color: Colors.black87,
                          size: 30.0,
                        )),
                  ),
                  title: Row(
                    children: [
                      const FaIcon(
                        FontAwesomeIcons.sackDollar,
                        color: Colors.black87,
                        size: 25.0,
                      ),
                      const SizedBox(width: 10.0),
                      AutoSizeText(
                        '–†–æ–∑—ã–≥—Ä—ã—à',
                        style: GoogleFonts.roboto(
                            color: Colors.black87,
                            fontSize: 30.0,
                            fontWeight: FontWeight.w900),
                      ),
                    ],
                  ),
                ),
                body: ListView(
                  children: [
                    const Padding(
                        padding:
                            EdgeInsets.only(left: 15.0, right: 15.0, top: 30.0),
                        child: Image(
                            image: AssetImage('assets/other_images/logo.png'),
                            width: 280.0,
                            height: 280.0)),
                    Padding(
                      padding: const EdgeInsets.all(15.0),
                      child: RichText(
                        textAlign: TextAlign.center,
                        text: TextSpan(
                          text:
                              '–ü—Ä–∏–≤–µ—Ç! –ú—ã –∑–∞–ø—É—Å—Ç–∏–ª–∏ –ø–µ—Ä–≤—ã–π —Ç–µ—Å—Ç–æ–≤—ã–π —Ä–æ–∑—ã–≥—Ä—ã—à –¥–ª—è 50 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ ',
                          style: GoogleFonts.roboto(
                              textStyle: const TextStyle(
                            color: Colors.black87,
                            fontSize: 18,
                            fontWeight: FontWeight.w700,
                          )),
                          children: [
                            TextSpan(
                                text: '1500 ‚ÇΩ',
                                style: GoogleFonts.roboto(
                                    textStyle: const TextStyle(
                                  color: Color.fromARGB(255, 252, 41, 71),
                                  fontSize: 20,
                                  fontWeight: FontWeight.w900,
                                ))),
                            TextSpan(
                              text:
                                  ', –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –¥–ª–∏—Ç—å—Å—è –¥–æ –≤—Ä–µ–º–µ–Ω–∏ —É–∫–∞–∑–∞–Ω–Ω–æ–º –≤ –Ω–∞—à–µ–º ',
                              style: GoogleFonts.roboto(
                                  textStyle: const TextStyle(
                                color: Colors.black87,
                                fontSize: 18,
                                fontWeight: FontWeight.w700,
                              )),
                            ),
                            TextSpan(
                              recognizer: TapGestureRecognizer()
                                ..onTap = () async {
                                  if (!await launchUrl(
                                      Uri.parse(
                                          'https://t.me/mini_casino_info'),
                                      mode: LaunchMode
                                          .externalNonBrowserApplication)) {
                                    throw Exception(
                                        'Could not launch ${Uri.parse('https://t.me/mini_casino_info')}');
                                  }
                                },
                              text: '—Ç–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª–µ.',
                              style: GoogleFonts.roboto(
                                  textStyle: const TextStyle(
                                fontSize: 18,
                                fontWeight: FontWeight.w700,
                                color: Colors.blue,
                              )),
                            )
                          ],
                        ),
                      ),
                    ),
                    Padding(
                      padding: const EdgeInsets.only(
                          top: 5.0, bottom: 15.0, left: 15.0, right: 15.0),
                      child: Text(
                          '–î–∞, –í—ã –≤—Å—ë –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø–æ–Ω—è–ª–∏! –ü—Ä–æ—Å—Ç–æ –∏–≥—Ä–∞—è –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è –í—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø—ã—Ç–∞—Ç—å —É–¥–∞—á—É –∏ –≤—ã–∏–≥—Ä–∞—Ç—å –¥–µ–Ω–µ–∂–Ω—ã–π –ø—Ä–∏–∑.',
                          textAlign: TextAlign.center,
                          style: GoogleFonts.roboto(
                              textStyle: const TextStyle(
                            color: Colors.black87,
                            fontSize: 18,
                            fontWeight: FontWeight.w700,
                          ))),
                    ),
                    Padding(
                      padding: const EdgeInsets.only(
                          top: 5.0, bottom: 15.0, left: 15.0, right: 15.0),
                      child: Text(
                          'P.S. –†–æ–∑—ã–≥—Ä—ã—à –±—É–¥–µ—Ç —Å—á–∏—Ç–∞—Ç—å—Å—è –Ω–∞—á–∞–≤—à–∏–º—Å—è –ø—Ä–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ –º–∏–Ω–∏–º—É–º 20 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤. –¢–∞–∫ —á—Ç–æ —Å–∫–æ—Ä–µ–µ —Ä–∞—Å—Å–∫–∞–∂–∏ —Å–≤–æ–∏–º –¥—Ä—É–∑—å—è–º –∏ –∑–Ω–∞–∫–æ–º—ã–º –æ–± —ç—Ç–æ–π –∏–≥—Ä–µ –∏ —Ä–æ–∑—ã–≥—Ä—ã—à–µ! üòä',
                          textAlign: TextAlign.center,
                          style: GoogleFonts.roboto(
                              textStyle: const TextStyle(
                            color: Colors.black87,
                            fontSize: 18,
                            fontWeight: FontWeight.w900,
                          ))),
                    ),
                    Padding(
                      padding: const EdgeInsets.only(left: 15.0, right: 15.0),
                      child: Divider(
                        thickness: 2.0,
                        color: Colors.grey.withOpacity(0.5),
                      ),
                    ),
                    Padding(
                      padding: const EdgeInsets.only(left: 15.0, top: 10.0),
                      child: Text('–í–æ–ø—Ä–æ—Å—ã –∏ –æ—Ç–≤–µ—Ç—ã:',
                          textAlign: TextAlign.left,
                          style: GoogleFonts.roboto(
                              textStyle: const TextStyle(
                            color: Colors.black87,
                            fontSize: 22.0,
                            fontWeight: FontWeight.w900,
                          ))),
                    ),
                    helpsText(
                        titleQuestion: '1. –ö–∞–∫ –ø—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–∏–µ?',
                        content:
                            '–ß—Ç–æ–±—ã –ø—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–∏–µ, –í—ã –¥–æ–ª–∂–Ω—ã –∏–º–µ—Ç—å Premium-–ø–æ–¥–ø–∏—Å–∫—É (—Å—Ç–æ–∏—Ç 99 —Ä—É–±–ª–µ–π).'),
                    helpsText(
                        titleQuestion:
                            '2. –ß—Ç–æ –ø—Ä–æ–∏–∑–æ–π–¥—ë—Ç –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´–£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å¬ª?',
                        content:
                            '–í—ã –±—É–¥–µ—Ç–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤. –ê —á—Ç–æ–±—ã –≤—Å—ë –±—ã–ª–æ –ø–æ-—á–µ—Å—Ç–Ω–æ–º—É, –í–∞—à –±–∞–ª–∞–Ω—Å –±—É–¥–µ—Ç —Å–ø–∏—Å–∞–Ω –¥–æ 500 —Ä—É–±–ª–µ–π. –î–∞–ª–µ–µ —á–∏—Ç–∞–π—Ç–µ –ø—É–Ω–∫—Ç 3.'),
                    helpsText(
                        titleQuestion: '3. –ß—Ç–æ —è –¥–æ–ª–∂–µ–Ω –¥–µ–ª–∞—Ç—å?',
                        content:
                            '–ü—Ä–æ—Å—Ç–æ –∏–≥—Ä–∞–π—Ç–µ –≤ —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ä–µ–∂–∏–º—ã —ç—Ç–æ–π –∏–≥—Ä—ã –≤ —Ç–µ—á–µ–Ω–∏–µ –Ω–µ–¥–µ–ª–∏ –∏ —É–≤–µ–ª–∏—á–∏–≤–∞–π—Ç–µ —Å–≤–æ–π –±–∞–ª–∞–Ω—Å.'),
                    helpsText(
                        titleQuestion: '4. –ö—Ç–æ –º–æ–∂–µ—Ç –≤—ã–∏–≥—Ä–∞—Ç—å?',
                        content:
                            '–ü–µ—Ä–≤—ã–π –∏–≥—Ä–æ–∫ –≤ —Ç–∞–±–ª–∏—Ü–µ –ª–∏–¥–µ—Ä–æ–≤ (–æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –ø–æ ¬´–£—á–∞—Å—Ç–Ω–∏–∫–∏¬ª).'),
                    helpsText(
                        titleQuestion: '5. –ö–∞–∫ —è –º–æ–≥—É –ø–æ–ª—É—á–∏—Ç—å –≤—ã–∏–≥—Ä—ã—à?',
                        content:
                            //'–í —Å–ª—É—á–∞–µ –≤—ã–∏–≥—Ä—ã—à–∞ –í–∞—Å –ø–æ–ø—Ä–æ—Å—è—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã, –Ω–∞ –∫–æ—Ç–æ—Ä—É—é –í—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å –≤—ã–∏–≥—Ä—ã—à (–∞ —Ç–∞–∫–∂–µ –µ–µ —Å–µ—Ç—å, –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ) –∏ –∞–¥—Ä–µ—Å –∫–æ—à–µ–ª—å–∫–∞. –ï—Å–ª–∏ –í—ã –æ—à–∏–±—ë—Ç–µ—Å—å –≤ –∞–¥—Ä–µ—Å–µ –∏–ª–∏ —Å–µ—Ç–∏, –¥–µ–Ω—å–≥–∏ –í–∞–º –Ω–µ –±—É–¥—É—Ç –∑–∞—á–∏—Å–ª–µ–Ω—ã. –ú—ã –∑–∞—á–∏—Å–ª—è–µ–º –≤—ã–∏–≥—Ä—ã—à–∏ —Ç–æ–ª—å–∫–æ –≤ —ç—Ç–∏ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã: Litecoin, Ripple, Tether, TRON. –ü–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –í–∞–º –≤–∞—à–µ–≥–æ –≤—ã–∏–≥—Ä—ã—à–∞ –º—ã —É–≤–µ–¥–æ–º–∏–º –≤—Å–µ—Ö –≤ –Ω–∞—à–µ–º —Ç–µ–ª–µ–≥—Ä–∞–º-–∫–∞–Ω–∞–ª–µ –æ —Ç–æ–º, —á—Ç–æ –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ, –∞ —Ç–∞–∫–∂–µ –æ–ø—É–±–ª–∏–∫—É–µ–º –∞–¥—Ä–µ—Å –í–∞—à–µ–≥–æ –∫–æ—à–µ–ª—å–∫–∞, —á—Ç–æ–±—ã –≤—Å–µ –º–æ–≥–ª–∏ –æ—Ç—Å–ª–µ–¥–∏—Ç—å –ø–ª–∞—Ç–µ–∂.'),
                            '–ï—Å–ª–∏ –í—ã –≤—ã–∏–≥—Ä–∞–µ—Ç–µ, –í–∞—Å –ø–æ–ø—Ä–æ—Å—è—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä –±–∞–Ω–∫–æ–≤—Å–∫–æ–π –∫–∞—Ä—Ç—ã, –Ω–∞ –∫–æ—Ç–æ—Ä—É—é –í—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å —Å–≤–æ–π –≤—ã–∏–≥—Ä—ã—à.'),
                    helpsText(
                        titleQuestion:
                            '6. –ï—Å–ª–∏ —è –≤—ã–∏–≥—Ä–∞–ª –≤ –ø—Ä–æ—à–ª—ã–π —Ä–∞–∑, —Å–º–æ–≥—É –ª–∏ —è –≤—ã–∏–≥—Ä–∞—Ç—å –≤ —Å–ª–µ–¥—É—é—â–∏–π?',
                        content:
                            '–ù–µ—Ç. –û–¥–∏–Ω –∏ —Ç–æ—Ç –∂–µ –∏–≥—Ä–æ–∫ –Ω–µ –º–æ–∂–µ—Ç –≤—ã–∏–≥—Ä–∞—Ç—å –¥–≤–∞–∂–¥—ã –ø–æ–¥—Ä—è–¥. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ –Ω–∞—Ä—É—à–∞–π—Ç–µ —ç—Ç–æ –ø—Ä–∞–≤–∏–ª–æ. –ï—Å–ª–∏ –º—ã —É–∑–Ω–∞–µ–º, —á—Ç–æ –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ –≤—Ç–æ—Ä–æ–π —Ä–∞–∑ –ø–æ–¥—Ä—è–¥, —Ç–æ –í—ã –Ω–µ –ø–æ–ª—É—á–∏—Ç–µ –¥–µ–Ω–µ–∂–Ω—ã–π –ø—Ä–∏–∑, –∞ —Ç–∞–∫–∂–µ –±—É–¥–µ—Ç–µ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã –∏ –±–æ–ª—å—à–µ –Ω–∏–∫–æ–≥–¥–∞ –Ω–µ —Å–º–æ–∂–µ—Ç–µ —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å.',
                        isImportant: true),
                    helpsText(
                        titleQuestion: '7. –ö–∞–∫ —è —É–∑–Ω–∞—é —á—Ç–æ —è –≤—ã–∏–≥—Ä–∞–ª?',
                        content:
                            '1. –í—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ —É–≤–∏–¥–µ—Ç—å —Å–≤–æ–µ –º–µ—Å—Ç–æ –≤ —Ç–∞–±–ª–∏—Ü–µ –ª–∏–¥–µ—Ä–æ–≤ (–æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–π –ø–æ ¬´–£—á–∞—Å—Ç–Ω–∏–∫–∏¬ª);\n2. –í –Ω–∞—à–µ–º —Ç–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª–µ –±—É–¥–µ—Ç –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ –≤—Ä–µ–º—è –æ–∫–æ–Ω—á–∞–Ω–∏—è —Ä–æ–∑—ã–≥—Ä—ã—à–∞. –ï—Å–ª–∏ –í—ã –≤ —ç—Ç–æ –≤—Ä–µ–º—è –∑–∞–Ω–∏–º–∞–µ—Ç–µ –ø–µ—Ä–≤–æ–µ –º–µ—Å—Ç–æ, —Ç–æ –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤ —Å –í–∞–º–∏ —Å–≤—è–∂—É—Ç—Å—è –ø–æ –∞–¥—Ä–µ—Å—É —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã —É–∫–∞–∑–∞–Ω–Ω–æ–π –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –ü–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –º—ã –í–∞–º –Ω–∞–ø–∏—Å–∞–ª–∏, —É –í–∞—Å —Ç–∞–∫–∂–µ –±—É–¥–µ—Ç 24 —á–∞—Å–∞, —á—Ç–æ–±—ã –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞–º!',
                        isImportant: true),
                    helpsText(
                        titleQuestion:
                            '8. –° –∫–∞–∫–æ–≥–æ –∞–¥—Ä–µ—Å–∞ —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã –º–Ω–µ –Ω–∞–ø–∏—à—É—Ç?',
                        content:
                            '–≠—Ç–æ –Ω–∞—à –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –∞–¥—Ä–µ—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ–π –ø–æ—á—Ç—ã –¥–ª—è —Å–≤—è–∑–∏ —Å –ø–æ–±–µ–¥–∏—Ç–µ–ª—è–º–∏: mini.casino.cash.prize@gmail.com.',
                        isImportant: true),
                    helpsText(
                        titleQuestion: '–í–ù–ò–ú–ê–ù–ò–ï!',
                        content:
                            '–ú—ã –æ—Å—Ç–∞–≤–ª—è–µ–º –∑–∞ —Å–æ–±–æ–π –ø—Ä–∞–≤–æ –∏–∑–º–µ–Ω—è—Ç—å/–¥–æ–ø–æ–ª–Ω—è—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –Ω–∞ —ç—Ç–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ. –°–æ–≤–µ—Ç—É–µ–º –ø–µ—Ä–µ–¥ –∫–∞–∂–¥—ã–º —É—á–∞—Å—Ç–∏–µ–º –ø–æ–ª–Ω–æ—Å—Ç—å—é —á–∏—Ç–∞—Ç—å –≤—Å—ë, —á—Ç–æ –∑–¥–µ—Å—å –Ω–∞–ø–∏—Å–∞–Ω–æ!',
                        isImportant: true),
                    const SizedBox(height: 15.0),
                    Container(
                      margin: const EdgeInsets.only(
                          left: 15.0, right: 15.0, bottom: 15.0),
                      decoration: BoxDecoration(
                          color: const Color.fromARGB(80, 42, 171, 238),
                          borderRadius: BorderRadius.circular(15.0),
                          border: Border.all(
                              color: const Color.fromARGB(255, 42, 171, 238),
                              width: 2.0)),
                      child: Padding(
                        padding: const EdgeInsets.all(15.0),
                        child: Column(
                          crossAxisAlignment: CrossAxisAlignment.start,
                          children: [
                            Text('Telegram',
                                textAlign: TextAlign.left,
                                style: GoogleFonts.roboto(
                                    textStyle: const TextStyle(
                                  color: Colors.black87,
                                  fontSize: 22.0,
                                  fontWeight: FontWeight.w900,
                                ))),
                            Padding(
                              padding: const EdgeInsets.only(top: 5.0),
                              child: Text(
                                  '–ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å –Ω–∞ –Ω–∞—à —Ç–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–ø—É—Å–∫–∞—Ç—å –Ω–æ–≤–æ—Å—Ç–∏ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è!',
                                  textAlign: TextAlign.left,
                                  style: GoogleFonts.roboto(
                                      textStyle: TextStyle(
                                    color: Colors.black87.withOpacity(0.7),
                                    fontSize: 15.0,
                                    fontWeight: FontWeight.w700,
                                  ))),
                            ),
                            Padding(
                              padding: const EdgeInsets.only(top: 15.0),
                              child: SizedBox(
                                height: 60.0,
                                width: double.infinity,
                                child: ElevatedButton(
                                  onPressed: () async {
                                    if (!await launchUrl(
                                        Uri.parse(
                                            'https://t.me/mini_casino_info'),
                                        mode: LaunchMode
                                            .externalNonBrowserApplication)) {
                                      throw Exception(
                                          'Could not launch ${Uri.parse('https://t.me/mini_casino_info')}');
                                    }
                                  },
                                  style: ElevatedButton.styleFrom(
                                    elevation: 5,
                                    backgroundColor:
                                        const Color.fromARGB(255, 42, 171, 238),
                                    shape: RoundedRectangleBorder(
                                        borderRadius:
                                            BorderRadius.circular(15.0)),
                                  ),
                                  child: Row(
                                    mainAxisAlignment: MainAxisAlignment.center,
                                    children: [
                                      const FaIcon(
                                        FontAwesomeIcons.telegram,
                                        color: Colors.white,
                                        size: 30.0,
                                      ),
                                      const SizedBox(width: 10.0),
                                      AutoSizeText(
                                        'Mini Casino',
                                        textAlign: TextAlign.center,
                                        style: GoogleFonts.roboto(
                                          color: Colors.white,
                                          fontSize: 25.0,
                                          fontWeight: FontWeight.w700,
                                        ),
                                      ),
                                    ],
                                  ),
                                ),
                              ),
                            ),
                          ],
                        ),
                      ),
                    ),
                    Padding(
                      padding: const EdgeInsets.only(left: 15.0, right: 15.0),
                      child: Divider(
                        thickness: 2.0,
                        color: Colors.grey.withOpacity(0.5),
                      ),
                    ),
                    Padding(
                      padding: const EdgeInsets.all(15.0),
                      child: SizedBox(
                        height: 60.0,
                        width: double.infinity,
                        child: ElevatedButton(
                          onPressed: () async {
                            await value.participate(context);
                          },
                          style: ElevatedButton.styleFrom(
                            elevation: 5,
                            backgroundColor: Colors.green,
                            shape: RoundedRectangleBorder(
                                borderRadius: BorderRadius.circular(15.0)),
                          ),
                          child: Padding(
                            padding:
                                const EdgeInsets.only(left: 10.0, right: 12.0),
                            child: AutoSizeText(
                              '–£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å',
                              textAlign: TextAlign.center,
                              style: GoogleFonts.roboto(
                                color: Colors.white,
                                fontSize: 25.0,
                                fontWeight: FontWeight.w700,
                              ),
                            ),
                          ),
                        ),
                      ),
                    ),
                    Padding(
                      padding: const EdgeInsets.only(
                          bottom: 15.0, left: 15.0, right: 15.0),
                      child: Text(
                          '–ù–∞–∂–∏–º–∞—è –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´–£—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å¬ª –í—ã —Å–æ–≥–ª–∞—à–∞–µ—Ç–µ—Å—å —Å–æ –≤—Å–µ–º, —á—Ç–æ –Ω–∞–ø–∏—Å–∞–Ω–æ –≤—ã—à–µ.',
                          textAlign: TextAlign.center,
                          style: GoogleFonts.roboto(
                              textStyle: TextStyle(
                            color: Colors.black87.withOpacity(0.7),
                            fontSize: 12.0,
                            fontWeight: FontWeight.w700,
                          ))),
                    ),
                  ],
                ),
              );
      },
    );
  }

  Widget helpsText(
      {required String titleQuestion,
      required String content,
      bool isImportant = false}) {
    return Container(
      margin: const EdgeInsets.only(left: 15.0, right: 15.0, top: 15.0),
      decoration: BoxDecoration(
          color: isImportant
              ? Colors.redAccent.withOpacity(0.2)
              : Colors.orange.withOpacity(0.2),
          borderRadius: BorderRadius.circular(15.0),
          border: Border.all(
              color: isImportant ? Colors.redAccent : Colors.orangeAccent,
              width: 2.0)),
      child: Padding(
        padding: const EdgeInsets.all(15.0),
        child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Text(titleQuestion,
                textAlign: TextAlign.left,
                style: GoogleFonts.roboto(
                    textStyle: const TextStyle(
                  color: Colors.black87,
                  fontSize: 22.0,
                  fontWeight: FontWeight.w900,
                ))),
            Padding(
              padding: const EdgeInsets.only(top: 5.0),
              child: Text(content,
                  textAlign: TextAlign.left,
                  style: GoogleFonts.roboto(
                      textStyle: TextStyle(
                    color: Colors.black87.withOpacity(0.7),
                    fontSize: 15.0,
                    fontWeight: FontWeight.w700,
                  ))),
            ),
          ],
        ),
      ),
    );
  }
}
